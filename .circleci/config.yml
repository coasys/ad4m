version: 2.1

orbs:
  node: circleci/node@5.2.0
  go: circleci/go@1.10.0
  rust: circleci/rust@1.6.1

jobs:
  build-and-test:
    docker:
      - image: coasys/ad4m-ci-linux:latest@sha256:2dd8206db5ee73ae58f48e2c2db595320ab88b94f5e0c0ddc99698191a03114f
    resource_class: xlarge
    steps:
      - checkout
      - restore_cache:
          keys:
            - hc-0.3.2-rc1
            - hc-
            - rust-cache-{{ checksum "Cargo.lock" }}
            - rust-cache-
      - run:
          name: Install HC
          command: |
            ls -la $HOME/.cargo/bin
            if [ ! -f "$HOME/.cargo/bin/hc" ]; then
              git clone https://github.com/holochain/holochain.git
              cd holochain
              git checkout holochain-0.3.2-rc.1
              cd crates/hc
              cargo build --release
              pwd
              ls -la
              mkdir -p $HOME/.cargo/bin
              cd ../../target/release
              pwd
              ls -lah
              cp hc $HOME/.cargo/bin/hc
              cd $HOME/.cargo/bin
              pwd
              ls -lah
              ./hc --version
            fi
            echo 'export PATH="$HOME/.cargo/bin:$PATH"' >> $BASH_ENV
      - save_cache:
          key: hc-0.3.2-rc1
          paths:
            - /home/circleci/.cargo/bin
      - restore_cache:
          keys:
            - rust-cache-{{ checksum "Cargo.lock" }}-v2
            - rust-cache-
      - run:
          name: cargo fmt --check
          command: cargo fmt --check
      - run:
          name: Install dependencies
          command: pnpm install --no-frozen-lockfile
      - run:
          name: Build dapp
          command: pnpm build-dapp
      - run:
          name: Install core dependencies
          command: cd ./core && pnpm install --no-frozen-lockfile
      - run:
          name: Build ADAM (without bootstrap languages)
          command: pnpm run build-libs
          no_output_timeout: 30m
      - run:
          name: cargo clippy
          no_output_timeout: 30m
          command: cargo clippy --all --exclude ad4m-launcher
      - save_cache:
          key: rust-cache-{{ checksum "Cargo.lock" }}-v2
          paths:
            - ./target
            - ~/.cargo/registry
            - ~/.cargo/git
      - persist_to_workspace:
          no-output-timeout: 30m
          root: .
          paths:
            - ./target/release/ad4m
            - ./target/release/ad4m-executor
      - run:
          name: Remove pnpm patches
          command: node removePnpm.js
      - run:
          name: Install dependencies
          command: pnpm install --no-frozen-lockfile
      - run:
          name: Install core dependencies
          command: cd ./core && pnpm install --no-frozen-lockfile
      - run:
          name: Root tests
          command: pnpm test
          no_output_timeout: 30m

  integration-tests-js:
    docker:
      - image: coasys/ad4m-ci-linux:latest@sha256:7008f587d355d1adeb58553f52f99e1812822b4d21dc78d69bc96040d5e57e82
    resource_class: xlarge
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - hc-hc-0.3.2-rc1
            - hc-
      - restore_cache:
          keys:
            - agent-language-rust-cache-{{ checksum "bootstrap-languages/agent-language/hc-dna/Cargo.lock" }}
            - agent-language-rust-cache-
      - restore_cache:
          keys:
            - direct-message-language-rust-cache-{{ checksum "bootstrap-languages/direct-message-language/hc-dna/Cargo.lock" }}
            - direct-message-language-rust-cache-
      - restore_cache:
          keys:
            - file-storage-rust-cache-{{ checksum "bootstrap-languages/file-storage/hc-dna/Cargo.lock" }}
            - file-storage-rust-cache-
      - restore_cache:
          keys:
            - p-diff-sync-rust-cache-{{ checksum "bootstrap-languages/p-diff-sync/hc-dna/Cargo.lock" }}
            - p-diff-sync-rust-cache-
      - restore_cache:
          keys:
            - p-diff-sync-socket-signaling-rust-cache-{{ checksum "bootstrap-languages/p-diff-sync-socket-signaling/hc-dna/Cargo.lock" }}
            - p-diff-sync-socket-signaling-rust-cache-
      - run:
          name: Install specific pnpm version
          command: npm install -g pnpm@9.15.0
      - run:
          name: Install dependencies
          command: pnpm install --no-frozen-lockfile
      - run:
          name: Install core dependencies
          command: cd ./core && pnpm install --no-frozen-lockfile
      - run:
          name: Build bootstrap languages
          command: pnpm run build-languages
      - save_cache:
          key: agent-language-rust-cache-{{ checksum "bootstrap-languages/agent-language/hc-dna/Cargo.lock" }}
          paths:
            - ./bootstrap-languages/agent-language/hc-dna/target
      - save_cache:
          key: direct-message-language-rust-cache-{{ checksum "bootstrap-languages/direct-message-language/hc-dna/Cargo.lock" }}
          paths:
            - ./bootstrap-languages/direct-message-language/hc-dna/target
      - save_cache:
          key: file-storage-rust-cache-{{ checksum "bootstrap-languages/file-storage/hc-dna/Cargo.lock" }}
          paths:
            - ./bootstrap-languages/file-storage-language/hc-dna/target
      - save_cache:
          key: p-diff-sync-rust-cache-{{ checksum "bootstrap-languages/p-diff-sync/hc-dna/Cargo.lock" }}
          paths:
            - ./bootstrap-languages/p-diff-sync/hc-dna/target
      - save_cache:
          key: p-diff-sync-socket-signaling-rust-cache-{{ checksum "bootstrap-languages/p-diff-sync-socket-signaling/hc-dna/Cargo.lock" }}
          paths:
            - ./bootstrap-languages/p-diff-sync-socket-signaling/hc-dna/target\
      - run:
          name: Install ffmpeg for transcription test
          command: sudo apt-get update && sudo apt-get install ffmpeg --fix-missing
      - run:
          name: Run integration tests
          command: cd ./tests/js && pnpm run test-main
          no_output_timeout: 30m

  integration-tests-cli:
    docker:
      - image: coasys/ad4m-ci-linux:latest@sha256:7008f587d355d1adeb58553f52f99e1812822b4d21dc78d69bc96040d5e57e82
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: git submodule
          command: git submodule update --init --recursive
      - run:
          name: Run binaries test script
          command: ./tests/bats/bin/bats tests/binaries.bats
      - run:
          name: Run integration test script
          command: ./tests/bats/bin/bats tests/integration.bats

workflows:
  version: 2
  build-and-test:
    jobs:
      - build-and-test
      - integration-tests-js:
          requires:
            - build-and-test
